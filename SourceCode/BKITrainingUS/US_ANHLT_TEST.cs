///************************************************
/// Generated by: AnhLT
/// Date: 13/11/2013 04:29:38
/// Goal: Create User Service Class for ANHLT_TEST
///************************************************
/// <summary>
/// Create User Service Class for ANHLT_TEST
/// </summary>

namespace BKITrainingUS
{
using BKITrainingDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;
using System;


public class US_ANHLT_TEST : US_Object
{
	private const string c_TableName = "ANHLT_TEST";
#region "Public Properties"
	public decimal dcID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["ID"] = value;
		}
	}

	public bool IsIDNull()	{
		return pm_objDR.IsNull("ID");
	}

	public void SetIDNull() {
		pm_objDR["ID"] = System.Convert.DBNull;
	}

	public string strFULL_NAME 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "FULL_NAME", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["FULL_NAME"] = value;
		}
	}

	public bool IsFULL_NAMENull() 
	{
		return pm_objDR.IsNull("FULL_NAME");
	}

	public void SetFULL_NAMENull() {
		pm_objDR["FULL_NAME"] = System.Convert.DBNull;
	}

	public DateTime datBIRTHDAY
	{
		get   
		{
			return CNull.RowNVLDate(pm_objDR, "BIRTHDAY", IPConstants.c_DefaultDate);
		}
		set   
		{
			pm_objDR["BIRTHDAY"] = value;
		}
	}

	public bool IsBIRTHDAYNull()
	{
		return pm_objDR.IsNull("BIRTHDAY");
	}

	public void SetBIRTHDAYNull()
	{
		pm_objDR["BIRTHDAY"] = System.Convert.DBNull;
	}

	public string strADDRESS 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "ADDRESS", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["ADDRESS"] = value;
		}
	}

	public bool IsADDRESSNull() 
	{
		return pm_objDR.IsNull("ADDRESS");
	}

	public void SetADDRESSNull() {
		pm_objDR["ADDRESS"] = System.Convert.DBNull;
	}

#endregion
#region "Init Functions"
	public US_ANHLT_TEST() 
	{
		pm_objDS = new DS_ANHLT_TEST();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_ANHLT_TEST(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_ANHLT_TEST(decimal i_dbID) 
	{
		pm_objDS = new DS_ANHLT_TEST();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
#endregion
}
}
