///************************************************
/// Generated by: TUAN_BH
/// Date: 03/04/2015 11:05:42
/// Goal: Create User Service Class for DM_MON_HOC
///************************************************
/// <summary>
/// Create User Service Class for DM_MON_HOC
/// </summary>

namespace BKITrainingUS
{
using BKITrainingDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;
using System;


public class US_DM_MON_HOC : US_Object
{
	private const string c_TableName = "DM_MON_HOC";
#region "Public Properties"
	public decimal dcID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["ID"] = value;
		}
	}

	public bool IsIDNull()	{
		return pm_objDR.IsNull("ID");
	}

	public void SetIDNull() {
		pm_objDR["ID"] = System.Convert.DBNull;
	}

	public string strMA_MON 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "MA_MON", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["MA_MON"] = value;
		}
	}

	public bool IsMA_MONNull() 
	{
		return pm_objDR.IsNull("MA_MON");
	}

	public void SetMA_MONNull() {
		pm_objDR["MA_MON"] = System.Convert.DBNull;
	}

	public string strTEN_MON 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "TEN_MON", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["TEN_MON"] = value;
		}
	}

	public bool IsTEN_MONNull() 
	{
		return pm_objDR.IsNull("TEN_MON");
	}

	public void SetTEN_MONNull() {
		pm_objDR["TEN_MON"] = System.Convert.DBNull;
	}

	public string strSO_TIN_CHI 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "SO_TIN_CHI", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["SO_TIN_CHI"] = value;
		}
	}

	public bool IsSO_TIN_CHINull() 
	{
		return pm_objDR.IsNull("SO_TIN_CHI");
	}

	public void SetSO_TIN_CHINull() {
		pm_objDR["SO_TIN_CHI"] = System.Convert.DBNull;
	}

#endregion
#region "Init Functions"
	public US_DM_MON_HOC() 
	{
		pm_objDS = new DS_DM_MON_HOC();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_DM_MON_HOC(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_DM_MON_HOC(decimal i_dbID) 
	{
		pm_objDS = new DS_DM_MON_HOC();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
#endregion
    public void FillDatasetSearchByMaMon(DS_DM_MON_HOC op_ds, string ip_str_ma_mon)
    {
        CStoredProc v_sp = new CStoredProc("pr_DM_MON_HOC_Check");
        v_sp.addNVarcharInputParam("@ip_str_ma_mon", ip_str_ma_mon);
        v_sp.fillDataSetByCommand(this, op_ds);
    }
    public void fillDatasetSearch(DS_DM_MON_HOC op_ds, string ip_str_search)
    {
        CStoredProc v_sp = new CStoredProc("pr_DM_MON_HOC_Search");
        v_sp.addNVarcharInputParam("@ip_str_search", ip_str_search);
        v_sp.fillDataSetByCommand(this, op_ds);
    }
}
}
