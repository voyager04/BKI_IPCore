///************************************************
/// Generated by: TUAN_BH
/// Date: 12/04/2015 02:41:14
/// Goal: Create User Service Class for V_SINH_VIEN_LOP_HOC
///************************************************
/// <summary>
/// Create User Service Class for V_SINH_VIEN_LOP_HOC
/// </summary>

namespace BKITrainingUS
{
using BKITrainingDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;
using System;


public class US_V_SINH_VIEN_LOP_HOC : US_Object
{
	private const string c_TableName = "V_SINH_VIEN_LOP_HOC";
#region "Public Properties"
	public decimal dcID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["ID"] = value;
		}
	}

	public bool IsIDNull()	{
		return pm_objDR.IsNull("ID");
	}

	public void SetIDNull() {
		pm_objDR["ID"] = System.Convert.DBNull;
	}

	public string strMA_SV 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "MA_SV", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["MA_SV"] = value;
		}
	}

	public bool IsMA_SVNull() 
	{
		return pm_objDR.IsNull("MA_SV");
	}

	public void SetMA_SVNull() {
		pm_objDR["MA_SV"] = System.Convert.DBNull;
	}

	public string strHO_TEN 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "HO_TEN", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["HO_TEN"] = value;
		}
	}

	public bool IsHO_TENNull() 
	{
		return pm_objDR.IsNull("HO_TEN");
	}

	public void SetHO_TENNull() {
		pm_objDR["HO_TEN"] = System.Convert.DBNull;
	}

	public DateTime datNGAY_SINH
	{
		get   
		{
			return CNull.RowNVLDate(pm_objDR, "NGAY_SINH", IPConstants.c_DefaultDate);
		}
		set   
		{
			pm_objDR["NGAY_SINH"] = value;
		}
	}

	public bool IsNGAY_SINHNull()
	{
		return pm_objDR.IsNull("NGAY_SINH");
	}

	public void SetNGAY_SINHNull()
	{
		pm_objDR["NGAY_SINH"] = System.Convert.DBNull;
	}

	public string strGIOI_TINH 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "GIOI_TINH", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["GIOI_TINH"] = value;
		}
	}

	public bool IsGIOI_TINHNull() 
	{
		return pm_objDR.IsNull("GIOI_TINH");
	}

	public void SetGIOI_TINHNull() {
		pm_objDR["GIOI_TINH"] = System.Convert.DBNull;
	}

	public string strMA_LOP 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "MA_LOP", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["MA_LOP"] = value;
		}
	}

	public bool IsMA_LOPNull() 
	{
		return pm_objDR.IsNull("MA_LOP");
	}

	public void SetMA_LOPNull() {
		pm_objDR["MA_LOP"] = System.Convert.DBNull;
	}

	public string strTEN_LOP 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "TEN_LOP", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["TEN_LOP"] = value;
		}
	}

	public bool IsTEN_LOPNull() 
	{
		return pm_objDR.IsNull("TEN_LOP");
	}

	public void SetTEN_LOPNull() {
		pm_objDR["TEN_LOP"] = System.Convert.DBNull;
	}

#endregion
#region "Init Functions"
	public US_V_SINH_VIEN_LOP_HOC() 
	{
		pm_objDS = new DS_V_SINH_VIEN_LOP_HOC();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_V_SINH_VIEN_LOP_HOC(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_V_SINH_VIEN_LOP_HOC(decimal i_dbID) 
	{
		pm_objDS = new DS_V_SINH_VIEN_LOP_HOC();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
    public void FillDatasetSearchByMSSV(DS_V_SINH_VIEN_LOP_HOC op_ds, string ip_str_mssv)
    {
        CStoredProc v_sp = new CStoredProc("pr_V_SINH_VIEN_LOP_HOC_Check");
        v_sp.addNVarcharInputParam("@ip_str_mssv", ip_str_mssv);
        v_sp.fillDataSetByCommand(this, op_ds);
    }
    public void fillDatasetSearchByMaSV(DS_V_SINH_VIEN_LOP_HOC op_ds, string ip_str_mssv)
    {
        CStoredProc v_sp = new CStoredProc("pr_V_SINH_VIEN_LOP_HOC_SEARCH_MA_SV");
        v_sp.addNVarcharInputParam("@ip_str_mssv", ip_str_mssv);
        v_sp.fillDataSetByCommand(this, op_ds);
    }
#endregion
}
}
