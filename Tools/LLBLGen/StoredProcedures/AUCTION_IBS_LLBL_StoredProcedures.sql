-- ================================================================================================================
-- Stored Procedures generated by LLBLGen v1.21.2003.712 Final on Friday, April 27, 2012, 6:55:43 PM
-- For the Low Level Business Logic Layer for the database 'AUCTION_IBS'
-- ================================================================================================================
SET NOCOUNT ON
GO
USE [AUCTION_IBS]
GO

-- ========================================================================================================
-- [Stored Procedures generated for table:  BKINDEX_MEMBERS]
GO

-- //// Insert Stored procedure.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[pr_BKINDEX_MEMBERS_Insert]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[pr_BKINDEX_MEMBERS_Insert]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will insert 1 row in the table 'BKINDEX_MEMBERS'
-- Gets: @MEMBER_NAME nvarchar(50)
-- Gets: @BIRTH_DAY datetime
-- Gets: @GIOI_TINH_YN nvarchar(1)
-- Gets: @LEVEL_MODE numeric(4, 0)
-- Returns: @ID numeric(18, 0)
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[pr_BKINDEX_MEMBERS_Insert]
	@MEMBER_NAME nvarchar(50),
	@BIRTH_DAY datetime,
	@GIOI_TINH_YN nvarchar(1),
	@LEVEL_MODE numeric(4, 0),
	@ID numeric(18, 0) OUTPUT
AS
-- INSERT a new row in the table.
INSERT [dbo].[BKINDEX_MEMBERS]
(
	[MEMBER_NAME],
	[BIRTH_DAY],
	[GIOI_TINH_YN],
	[LEVEL_MODE]
)
VALUES
(
	@MEMBER_NAME,
	@BIRTH_DAY,
	@GIOI_TINH_YN,
	@LEVEL_MODE
)
-- Get the IDENTITY value for the row just inserted.
SELECT @ID=SCOPE_IDENTITY()
GO


-- //// Update Stored procedure for updating one single row.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[pr_BKINDEX_MEMBERS_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[pr_BKINDEX_MEMBERS_Update]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will update an existing row in the table 'BKINDEX_MEMBERS'
-- Gets: @ID numeric(18, 0)
-- Gets: @MEMBER_NAME nvarchar(50)
-- Gets: @BIRTH_DAY datetime
-- Gets: @GIOI_TINH_YN nvarchar(1)
-- Gets: @LEVEL_MODE numeric(4, 0)
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[pr_BKINDEX_MEMBERS_Update]
	@ID numeric(18, 0),
	@MEMBER_NAME nvarchar(50),
	@BIRTH_DAY datetime,
	@GIOI_TINH_YN nvarchar(1),
	@LEVEL_MODE numeric(4, 0)
AS
-- UPDATE an existing row in the table.
UPDATE [dbo].[BKINDEX_MEMBERS]
SET 
	[MEMBER_NAME] = @MEMBER_NAME,
	[BIRTH_DAY] = @BIRTH_DAY,
	[GIOI_TINH_YN] = @GIOI_TINH_YN,
	[LEVEL_MODE] = @LEVEL_MODE
WHERE
	[ID] = @ID
GO


-- //// Delete Stored procedure using Primary Key.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[pr_BKINDEX_MEMBERS_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[pr_BKINDEX_MEMBERS_Delete]
GO

---------------------------------------------------------------------------------
-- Stored procedure that will delete an existing row from the table 'BKINDEX_MEMBERS'
-- using the Primary Key. 
-- Gets: @ID numeric(18, 0)
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[pr_BKINDEX_MEMBERS_Delete]
	@ID numeric(18, 0)
AS
-- DELETE an existing row from the table.
DELETE FROM [dbo].[BKINDEX_MEMBERS]
WHERE
	[ID] = @ID
GO


-- //// IsUpdatable Stored procedure.
-- //// Try-to-lock-and-compare Stored procedure.
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[pr_BKINDEX_MEMBERS_IsUpdatable]') and OBJECTPROPERTY(id, N'IsProcedure') = 1) drop procedure [dbo].[pr_BKINDEX_MEMBERS_IsUpdatable]
GO

---------------------------------------------------------------------------------
-- Stored procedure that try-to-lock-and-compare 1 row in the table 'BKINDEX_MEMBERS'
-- Gets: @MEMBER_NAME nvarchar(50)
-- Gets: @BIRTH_DAY datetime
-- Gets: @GIOI_TINH_YN nvarchar(1)
-- Gets: @LEVEL_MODE numeric(4, 0)
-- Returns: @op_Error_Code int
---------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[pr_BKINDEX_MEMBERS_IsUpdatable]
	@MEMBER_NAME nvarchar(50),
	@BIRTH_DAY datetime,
	@GIOI_TINH_YN nvarchar(1),
	@LEVEL_MODE numeric(4, 0),
	@op_Error_Code int OUTPUT
/* DESCRIPTION:
|| Procedure nay dung de check 1 record trong bang cm_dm_tu_dien
|| 1. xem co lock duoc record nhu vay khong , 
||	a)thu lock neu khong lock duoc thi user khac dang lock 
||    b) neu khong co thi da bi xoa 
|| 2. xem co giong ban dau khong, neu khong giong thi da bi thay
*/
AS
BEGIN
/*********************************************
|| COMMON SETTINGS
**********************************************/
SET NOCOUNT ON
/**********************************************************
|| DECLARATION
***********************************************************/
	declare @v_MEMBER_NAME nvarchar(50)
	declare @v_BIRTH_DAY datetime
	declare @v_GIOI_TINH_YN nvarchar(1)
	declare @v_LEVEL_MODE numeric(4, 0)
	 -- 1.a) neu khong lock duoc => ai do dang dung du lieu
	select 
	@v_MEMBER_NAME = MEMBER_NAME ,
	@v_BIRTH_DAY = BIRTH_DAY ,
	@v_GIOI_TINH_YN = GIOI_TINH_YN ,
	@v_LEVEL_MODE = LEVEL_MODE 
	 from BKINDEX_MEMBERS with (updlock, rowlock, nowait)
	 where ID =  @ID
	 -- 1.b) khong co du lieu  => du lieu da bi xoa mat roi 
	if ( @v_ID is null )
	begin
		set @OP_ERROR_CODE = dbo.C_RECORD_DELETED()
		raiserror ('RECORD_DELETED',16,1)
		goto ERROR_HANDLER
	end
	/*2. so sanh cac gia tri co giong  nhau khong */	
	 if (
	isnull( @v_MEMBER_NAME,dbo.C_Extrem_Str() ) <> isnull( @MEMBER_NAME ,dbo.C_Extrem_Str() )  OR 
	isnull( @v_BIRTH_DAY,dbo.C_Extrem_Date() ) <> isnull( @BIRTH_DAY ,dbo.C_Extrem_Date() )  OR 
	isnull( @v_GIOI_TINH_YN,dbo.C_Extrem_Str() ) <> isnull( @GIOI_TINH_YN ,dbo.C_Extrem_Str() )  OR 
	isnull( @v_LEVEL_MODE,dbo.C_Extrem_Number() ) <> isnull( @LEVEL_MODE ,dbo.C_Extrem_Number() ) 
	)
	begin
		set @OP_ERROR_CODE = dbo.C_RECORD_UPDATED()
		raiserror ('RECORD_CHANGED',16,1)
		goto ERROR_HANDLER
	end
		return
	/********************************************************* 
	|| ERROR HANDLING
	*********************************************************/
	ERROR_HANDLER:
END
GO


-- [End of Stored Procedures for table:     BKINDEX_MEMBERS]
-- ========================================================================================================
GO
